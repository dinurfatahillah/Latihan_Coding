#include <iostream>
#include <fstream>
#include <string>

void printDataPegawai(const std::string fileName) {

    std::ifstream file(fileName);
    if(!file.is_open()) {
        std::cout << "File Tidak Dapat Dibuka\n";
        return;
    }

    std::string line;
    bool kosong = false;
    while(std::getline(file,line)) {
        kosong = true;
        std::cout << line << std::endl;
    }

    if(!kosong) {
        std::cout << "\nData File Kosong\n";
    }
    file.close();
}

void tambahDataPegawai(const std::string fileName) {
    std::string nama;
    std::string gaji;

    std::ofstream file(fileName, std::ios::app);
    if(!file.is_open()) {
        std::cout << "File Tidak Dapat Dibuat\n";
        return;
    }
    std::cout << "\nINPUT DATA PEGAWAI\n";
    std::cout << "==================\n";
    std::cout << "Masukan Nama Pegawai : ";
    std::getline(std::cin, nama);
    std::cout << "Masukan Gaji Pegawai : ";
    std::getline(std::cin,  gaji);

    file << "Nama : " << nama << "\n" << "Gaji : " << gaji << "\n\n";
    
    std::cout << "\nDATA BERHASIL DISIMPAN\n";
    
    file.close();
}

void cariNamaPegawai(const std::string fileName) {
    std::ifstream file(fileName);
    if(!file.is_open()) {
        std::cout << "\nFile Tidak Dapat Dibuka\n";
        return;
    }
    std::string cariNama;
    std::string line;
    
    std::cout << "\nMasukanNama Pegawai Yang Akan Dicari : ";
    std::getline(std::cin, cariNama);
    bool ditemukan = false;
    
    while(std::getline(file, line)) {
        if(line.find(cariNama) != std::string::npos) {
            ditemukan = true;
            std::cout << "\nData Ditemukan\n";
            std::cout << "==============\n";
            std::cout << "\n" << line << "\n";
            std::getline(file,line);
            std::cout << line << "\n";
            std::getline(file, line);
            std::cout << line << "\n";
        }
    }

    if(!ditemukan) {
        std::cout << "\nData Tidak Ditemukan!\n";
        return;
    }
}

void editDataPegawai(const std::string fileName, const std::string fileTemp) {
    std::string line, newName, cariNama;
    std::string newGaji;

    std::ifstream file(fileName);
    if(!file.is_open()) {
        std::cout << "File Tidak Dapat Dibuka\n";
        return;
    }
    std::ofstream file2(fileTemp);
    if(!file2.is_open()) {
        std::cout << "File 2 Tidak Dapat Dibuka\n";
        return;
    }

    while(std::getline(file,line)) {
        file2 << line << std::endl;
    }
    file.close();
    file2.close();
    int hasil = std::remove(fileName.c_str());
    if(hasil == 0) {
        std::ofstream fileBaru (fileName);
        if(!fileBaru.is_open()){
            std::cout << "\nFile Baru Gagal Dibuat\n";
            return;
        }
        fileBaru.close();
    } else {
        std::cout << "\nFileName gagal Dihapus\n";
        return;
    }
    std::ofstream filePegawai (fileName);
    if(!filePegawai.is_open()) {
        std::cout << "File Pegawai Tidak Dapat Dibuat";
        return;
    }
    std::ifstream filetmp(fileTemp);
    if(!filetmp.is_open()) {
        std::cout << "File Temp Tidak Dapat Dibuka\n";
        return;
    }

    std::cout << "Masukan Nama Pegawai Yang Akan di Edit :";
    std::getline(std::cin, cariNama);
    bool ditemukan = false;
    while(std::getline(filetmp, line)) {
        if(line.find(cariNama) != std::string::npos) {
            ditemukan = true;
            
            std::cout << line << "\n";
            std::getline(filetmp, line);
            std::cout << line << std::endl;
            std::cout << "===============\n\n";
            
            std::cout << "Edit Nama Pegawai : ";
            std::getline(std::cin, newName);

            std::string lineGaji;
            std::getline(filetmp, lineGaji);
            std::cout << "Edit Gaji Pegawai : ";
            std::getline(std::cin ,newGaji);

            filePegawai << "\nNama : " << newName << "\n" << "Gaji : " << newGaji << "\n";
        } else {
            filePegawai << line << std::endl;
        }
    }
    if(!ditemukan) {
        std::cout << "Nama Tidak Ditemukan!\n";
        return;
    }
    
    filePegawai.close();
    filetmp.close();

}

void hapusDataPegawai(const std::string fileName, const std::string fileTemp) {
    std::string cariNama;
    std::string line;

    std::ifstream file(fileName);
    if(!file.is_open()) {
        std::cout << "File Tidak Dapat Dibuka\n";
        return;
    }
    std::ofstream file2(fileTemp);
    if(!file2.is_open()) {
        std::cout << "File Tidak Dapat Dibuat\n";
        return;
    }

    std::cout << "Masukan nama Pegawai Yang Akan Dihapus : ";
    std::getline(std::cin, cariNama);
    bool ditemukan = false;
    bool hapus = false;

    while(std::getline(file, line)) {
        if(line.find(cariNama) != std::string::npos){
            ditemukan = true;
            hapus = true;
            std::cout << "\nDATA BERHASIL DIHAPUS\n";            
        }else if(hapus){
            if(line.empty()){
                hapus = false;
            }
        }else{
            file2 << line << std::endl;
        }
    }

    if(!ditemukan) {
        std::cout << "nama Tidak Ditemukan\n";
        return;
    }
    file.close();
    file2.close();
    int hasil = std::remove(fileName.c_str());
    if(hasil == 0) {
        std::ofstream file3 (fileName);
        if(!file3.is_open()) {
            std::cout << "Filr Gagal Dibuat";
            return;
        }

        std::ifstream file4(fileTemp);
        if(!file4.is_open()) {
            std::cout << "File Temp Tidak Dapat Dibuka\n";
            return;
        }

        while(std::getline(file4, line)) {
            file3 << line << std::endl;
        }

        file3.close();
        file4.close();
        int hasil2 = std::remove(fileTemp.c_str());
        if(hasil2 != 0 ) {
            std::cout << "\nFile Temp Gagal Dihapus\n";
        }
    }
}
void hapusFile(const std::string fileName){
    int file = std::remove(fileName.c_str());
    if(file == 0 ){
        std::ofstream fileBaru(fileName);
        if(!fileBaru.is_open()){
            std::cout << "File Baru Gagal Dibuat";
        }
        fileBaru.close();
        std::cout << "\nBerhasil Menghapus File \n";
        return;
    }else{
        std::cout << "Gagal Menghapus File\n";
        return;
    }
}

int pilihanOpsi(int pilih){
    std::cout << "1] Opsi 1\n";
    std::cout << "2] Opsi 2\n";
    std::cout << "3] Opsi 3\n";
    std::cout << std::endl;
    std::cout << "Pilih Nomor : ";
    std::cin >> pilih;
    std::cin.ignore();
    return pilih;
}

int main() {
    int pilih;
    std::string line;
    const std::string fileName = "DataPegawai.txt";
    const std::string fileTemp ="temp.txt";
    std::cout << "=================================\n";
    std::cout << "SELAMAT ATANG DI APLIKASI PEGAWAI\n";
    std::cout << "=================================\n";
    do {
        std::cout <<std::endl;
        std::cout << "1] Tampilkan Seluruh Data Pegawai\n";
        std::cout << "2] Tambah Data Pegawai\n";
        std::cout << "3] Cari Pegawai Berdasrkan Nama\n";
        std::cout << "4] Edit Data Pegawai\n";
        std::cout << "5] Hapus data Pegawai\n";
        std::cout << "6] Hapus Seluruh Data Pegawai\n";
        std::cout << "7] Opsi Lainnya\n";

        std::cout << std::endl;
        std::cout << "Pilih Nomor : ";
        std::cin >> pilih;
        std::cin.ignore();

        if (pilih == 1) {
            printDataPegawai(fileName);
        } else if(pilih == 2) {
            tambahDataPegawai(fileName);
        } else if(pilih == 3) {
            cariNamaPegawai(fileName);
        } else if(pilih == 4) {
            editDataPegawai(fileName, fileTemp);
        } else if(pilih == 5) {
            hapusDataPegawai(fileName, fileTemp);
        }else if(pilih == 6){
            hapusFile(fileName);
        }else if(pilih == 7){
            int opsi = pilihanOpsi(pilih);
            if(opsi == 1){
                std::cout << "Ini Opsi 1";
            }else if(opsi == 2){
                std::cout << "Ini Opsi 2";
            }else if(opsi == 3){
                std::cout << "Ini Opsi 3";
            }
        }
    
    std::cout << "\nTekan 'Enter' Untuk Kembali Ke Menu\n";
    std::cin.ignore();
    
    } while(true);
    return 0;
}
